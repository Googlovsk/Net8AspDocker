# version: '3.9'
# services:
#   webapp:
#     build: 
#       context: .
#       dockerfile: Dockerfile
#     image: net9asp:latest
#     ports:
#       - "80:80"
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#     depends_on:
#       - db
#   db:
#     image: mcr.microsoft.com/mssql/server
#     environment:
#       - ACCEPT_EULA=Y
#       - SA_PASSWORD=Str0ngP@ssw0rd!
#       - MSSQL_PID=Express
#     ports:
#       - "1433:1433"
#     restart: on-failure

# version: '3.9'
# services:
#   webapp:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: net9asp:latest
#     ports:
#       - "5432:5432"
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#     depends_on:
#       - db
#   db:
#     image: postgres:latest
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=root
#       - POSTGRES_DB=Docker_AspNet8
#     ports:
#       - "80:80"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     restart: on-failure

version: '3.8'

services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./data/uploads:/uploads
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
